#!/bin/bash

home_md_file="mark/index.md"
about_md_file="mark/about/index.md"
contact_md_file="mark/contact/index.md"
posts_md_file="mark/posts/index.md"


clean_up ()
{
    [[ -f $home_md_file ]] && rm -rf $home_md_file
    [[ -f $about_md_file ]] && rm -rf $about_md_file
    [[ -f $contact_md_file ]] && rm -rf $contact_md_file
    [[ -f $posts_md_file ]] && rm -rf $posts_md_file
    [[ -d site ]] && rm -rf site
    [[ -d test ]] && rm -rf test
}


build_default_md_files ()
{
    # Start from templates
    cat tmpl/home.md > $home_md_file
    cat tmpl/about.md > $about_md_file
    cat tmpl/contact.md > $contact_md_file
    cat tmpl/posts.md > $posts_md_file

    # Posts-page
    for post in `find mark/posts -type d -depth 1 | sort -r`; do
        date_in_dir=${post##*/}
        date_in_file=`grep "^date: " $post/index.md | sed "s/date: //"`
        if [ "$date_in_dir" == "$date_in_file" ] || [ $1 == 0 ]
        then
            title=`grep "^title: " $post/index.md | sed "s/title: //"`
            echo "- [$date_in_dir - $title](${post#mark}/)" >> $posts_md_file
        fi
    done

    # Home-page
    cat mark/posts/index.md | sed -n "/^- /p" | head -n 5 >> $home_md_file
    echo " " >> $home_md_file
    echo "([archive](/posts/))" >> $home_md_file
}


make_html_version ()
{
    cp -r mark site
    cp tmpl/{style.css,favicon.png} site/
    for md_file in `find site -type f -name "*.md"`; do
        pandoc \
            -s \
            --katex \
            -T BÅ’RSETH \
            -c /style.css \
            -H tmpl/head.html \
            -B tmpl/banner.html \
            -A tmpl/footer.html \
            -i $md_file \
            -o ${md_file%.md}.html
    done
    find site -type f -name "*.md*" -delete
}


make_test_version ()
{
    cp -r site test
    for html_file in `find test -type f -name "*.html"`; do
        sed -i "" "s|href=\"/|href=\"${PWD}/test/|g" $html_file
        sed -i "" "s|src=\"/|src=\"${PWD}/test/|g" $html_file
        sed -i "" "s|href=\"/\(.*\)/\"|href=\"/\1/index.html\"|" $html_file
    done
}


prune_posts_with_wrong_date ()
{
    for post in `find mark/posts -type d -depth 1`; do
        date_in_dir=${post##*/}
        date_in_file=`grep "^date: " $post/index.md | sed "s/date: //"`
        if [ "$date_in_dir" != "$date_in_file" ]; then
            [[ $1 == 1 ]] && echo "Error! Wrong date in $post"
            rm -rf site/posts/${post#mark/posts/}
        fi
    done
}



build ()
{
    clean_up
    build_default_md_files $1
    make_html_version
    make_test_version
    prune_posts_with_wrong_date $1
}


push ()
{
    build 1
    # check for drafts, invoke error if present
    # push
    echo "Not yet supported..."
}


print_help ()
{
    echo "NAME" 
    echo "     pd -- my website generator and manager"
    echo " "
    echo "SYNOPSIS" 
    echo "     pd [argument]"
    echo " "
    echo "DESCRIPTION"
    echo "     Script for generating website from markdown files."
    echo "     Also makes test-version, and handles pushing to server."
    echo "     "
    echo "     Behaviour managed by the following options:"
    echo "     "       
    echo "     -h, --help          Show brief documentation (for full, see README)"
    echo "     "       
    echo "     -c, --clean_up      Remove all generated files (e.g. before a git commit)"
    echo "     "       
    echo "     -b, --build         Build webpage"
    echo "     "       
    echo "     -bd, --build-demo   Build webpage, including draft-mode posts in test/"
    echo "     "       
    echo "     -p, --push          Push built website to server"
    echo "     "       
}

if [[ $# == 0 ]]
then
    print_help
    exit 1
fi

case $1 in
    -c|--clean-up)
        clean_up; exit 1 ;;
    -b|--build)
        build 1; exit 1 ;;
    -bd|--build-demo)
        build 0; exit 1 ;;
    -p|--push)
        push; exit 1 ;;
    -h|--help|*)
        print_help; exit 1 ;;
esac

